1.脚手架是干嘛的？
它是一个命令行工具，提供一系列和这个框架相关的功能，比如本地起一个开发服务器，
静态验证代码格式，运行单元测试，构建生产环境的代码等等功能

2.JSX是什么？
a.是JavaScript的语法扩展
b.可以使用花括号{}内嵌任何JavaScript表达式（Expressions）
c.jsx的属性基本和html属性一致，除了两个属性class和for作为关键字被保留，需要变为className和htmlFor

3.JSX会被编译成什么
a.它是一种语法糖-React.createElement()
b.会被编译成ReactElement对象
c.ReactDOM.render() 接收的第一个参数是标签字符串，如果是自定义组件的话则是大写开头的组件名称

4.Props(属性)
a.组件像一个函数一样，接受特定的输入(props),产出特定的输出(React elements)
b.V = f(props)

5.纯函数（pure function）
a.是指输入值没有被改变的函数，与之相对的是非纯函数，输入值被改变了的函数
  而react的组件严格定义了组件的属性（props）必须满足纯函数的规则，即不能被改变

6.State(状态)
a.组件内部的数据，可以动态改变（相对的属性是外部传入的，不能被改变）
b.this.setState() 是更新state的唯一途径

7.生命周期
三大类
a.组件初始化
b.组件更新
c.组件卸载

8.Forms(表单)
a.前情提要：HTML 表单元素天生就存在一些内部状态，比如 input、textarea 和 select 这些标签，
  它们会维持自己的内部状态，并且根据用户的输入去进行更新。但是在 React 中，这些可变状态一般保持在 state 中，
  然后通过 this.setState() 方法去进行更新。
b.你必须要知道：因为 React 默认是单向数据流的处理方式。也就是说，我们可以动态绑定输入框的值在 state （组件的状态）当中，
  当数据发生改变时，我们必须手动监听输入框的 onChange 事件，在事件处理函数中手动通过 this.setState() 方法驱动视图的更新。
  【因为不存在指令的概念，所以 React 只支持数据的单向流动（绑定），不同于 Vue 的 v-model 指令可以自动实现表单数据的双向绑定。
  这个一定要清楚。】
c.注意：有时使用受控组件可能会非常繁琐，因为你要为数据可能发生的变化，对于每一种变化方式都要编写一个事件处理程序，
  并且通过一个组件来管理全部的状态。当将已经有的代码库转化为 React，或者将 React 应用程序与非 React 库集成的时候，这可能变得非常烦人。

d.应用场景：由于非受控组件将真实数据保存在 DOM 中，因此在使用非受控组件时，更容易同时集成 React 和非 React 的代码。
  如果你想快速而随性，这样可以减少代码量。否则，你应该使用受控组件。

9.当一个组件既没有生命周期也没有state的时候，我们就可以使用更简单的function的形式

10.React开发思想以及和其他思想的异同
a.状态提升（lifting state up）
b.自上而下的数据流（top-down data flow）
c.和双向绑定的区别

11.Context 是什么
a.props 属性是【由上到下单向】传递的
b.context 提供了在组件中【共享】此类值的方法
c.设计目的是共享那些对于组件来说【全局的数据】
d.不要仅仅为了避免在几个层级下的组件传递props而使用context